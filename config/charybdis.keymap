#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define NAVNUM 1
#define SYMBOL 2
#define FUNCTION 3
#define NAV 4
#define SYSTEM 5
#define MOUSE 6
#define SCROLL 7
#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29
#define THUMBS 30 31 32 33 34 35
#define U_TAPPING_TERM 200

&sk {
    release-after-ms = <600>;
    quick-release;
};

&sl { ignore-modifiers; };

&mt { flavor = "tap-preferred"; };

&lt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <175>;
};

&caps_word { /delete-property/ ignore-modifiers; };

/ {
    behaviors {
        u_mt: u_mt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_mt";
            #binding-cells = <2>;
            tapping_term_ms = <U_TAPPING_TERM>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        u_lt: u_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_lt";
            #binding-cells = <2>;
            tapping_term_ms = <U_TAPPING_TERM>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        Shift_Enter: Shift_Enter {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_ENTER";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <40>;
            tapping-term-ms = <100>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <2000>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <250>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <2000>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <250>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        hml_s: hml_s {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <2000>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <0>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        hmr_s: hmr_s {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <2000>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <0>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        smart_shift: smart_shift {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&sk LSHIFT>, <&caps_word>;

            mods = <(MOD_LSFT)>;
        };

        insert_email: insert_email {
            compatible = "zmk,behavior-tap-dance";
            label = "INSERT_EMAIL";
            #binding-cells = <0>;
            bindings = <&kp AT_SIGN>, <&email>;
        };
    };

    macros {
        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp A &kp P &kp K &kp N2 &kp N0 &kp N0 &kp N3 &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL";
        };
    };

    // ╭──────┬──────┬──────┬──────┬──────╮  ╭──────┬──────┬──────┬──────┬──────╮
    //    00     01     02     03     04        05     06     07     08     09
    // ├──────┼──────┼──────┼──────┼──────┼  ├──────┼──────┼──────┼──────┼──────┤
    //    10     11     12     13     14        15     16     17     18     19
    // ├──────┼──────┼──────┼──────┼──────┼  ├──────┼──────┼──────┼──────┼──────┤
    //    20     21     22     23     24        25     26     27     28     29
    // ╰──────┴──────┴──────┼──────┼──────┤  ├──────┼──────┴──────┴──────┴──────╯
    //                  30     31     32        33     34     35
    //               ╰──────┴──────┴──────╯  ╰──────┴──────┴──────╯

    combos {
        compatible = "zmk,combos";

        combo_bt1 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <3 4>;
        };

        combo_bt2 {
            bindings = <&bt BT_SEL 2>;
            key-positions = <5 6>;
        };

        combo_bt_clear_all {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <3 4 5 6>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <22 23>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <23 24>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <21 22>;
        };

        undo {
            bindings = <&kp LC(Z)>;
            key-positions = <20 21>;
        };

        save {
            bindings = <&kp LC(S)>;
            key-positions = <11 12>;
        };

        search {
            bindings = <&kp LC(LS(F))>;
            key-positions = <14 13 12>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <15 25>;
        };

        dash {
            bindings = <&kp MINUS>;
            key-positions = <26 16>;
        };

        semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <17 27>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <18 28>;
        };

        question {
            bindings = <&kp QUESTION>;
            key-positions = <19 29>;
        };

        left-bracket {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 17>;
        };

        right-bracket {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <17 18>;
        };

        left-square {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <26 27>;
        };

        right-square {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <27 28>;
        };

        gaming-layer {
            bindings = <&tog 9>;
            key-positions = <0 1 2>;
        };
    };

    chosen { zmk,physical-layout = &charybdis_6col_layout; };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            display-name = "Base";
            bindings = <
  &kp Q       &kp W           &kp E        &kp R        &kp T        &kp Y        &kp U            &kp I         &kp O       &kp P
  &hl LGUI A  &hl LEFT_ALT S  &hl LCTRL D  &hl LSHFT F  &kp G        &kp H        &hr RSHFT J      &hr RCTRL K   &hr RALT L  &hr RGUI SQT
  &lt 6 Z     &kp X           &kp C        &kp V        &kp B        &kp N        &kp M            &kp COMMA     &kp DOT     &lt 6 SLASH
                              &lt 4 ESC    &lt 4 SPACE  &lt 5 TAB    &lt 2 ENTER  &lt 1 BACKSPACE  &lt 3 DELETE
            >;
        };

        NAVNUM {
            display-name = "Numbers";
            bindings = <
  &none      &kp NUMBER_7       &kp NUMBER_8  &kp NUMBER_9        &none            &none  &kp N7        &kp N8        &kp N9       &none
  &kp COLON  &hl LALT NUMBER_4  &hl LCTRL N5  &hl LSHFT NUMBER_6  &kp EQUAL        &none  &hr RSHFT N4  &hr RCTRL N5  &hr RALT N6  &kp RGUI
  &kp GRAVE  &kp NUMBER_1       &kp NUMBER_2  &kp NUMBER_3        &kp BACKSLASH    &none  &kp N1        &kp N2        &kp N3       &kp N0
                                &kp PERIOD    &kp NUMBER_0        &kp MINUS        &none  &trans        &none
            >;
        };

        SYMBOL {
            display-name = "Symbols";
            bindings = <
  &none          &kp AMPERSAND    &kp ASTERISK   &kp LEFT_PARENTHESIS  &none       &none  &none            &none              &none          &none
  &kp SEMICOLON  &kp DOLLAR       &kp PERCENT    &kp CARET             &kp PLUS    &none  &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_GUI
  &kp TILDE      &kp EXCLAMATION  &insert_email  &kp HASH              &kp PIPE    &none  &none            &none              &none          &none
                                  &none          &trans                &none       &none  &none            &none
            >;
        };

        FUNCTION {
            display-name = "Functions";
            bindings = <
  &trans  &kp F7  &kp F8  &kp F9  &kp F12    &trans  &trans  &trans  &trans  &trans
  &trans  &kp F4  &kp F5  &kp F6  &kp F11    &trans  &trans  &trans  &trans  &trans
  &trans  &kp F1  &kp F2  &kp F3  &kp F10    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans     &trans  &trans  &trans
            >;
        };

        NAV {
            display-name = "Navigation";
            bindings = <
  &none         &none         &none             &none           &none    &kp INSERT  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT
  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none    &caps_word  &kp LEFT        &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT
  &none         &none         &none             &none           &none    &none       &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END
                              &trans            &none           &none    &none       &none           &none
            >;
        };

        SYSTEM {
            display-name = "System";
            bindings = <
  &trans            &trans            &trans            &trans            &trans    &trans      &trans            &trans             &trans           &trans
  &kp LG(NUMBER_4)  &kp LG(NUMBER_3)  &kp LG(NUMBER_2)  &kp LG(NUMBER_1)  &trans    &trans      &kp C_PREVIOUS    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT
  &trans            &trans            &trans            &trans            &trans    &trans      &trans            &trans             &trans           &trans
                                      &trans            &trans            &trans    &kp C_STOP  &kp C_PLAY_PAUSE  &kp K_MUTE
            >;
        };

        MOUSE {
            display-name = "Mouse";
            bindings = <
  &none   &none    &none     &none     &none       &none     &none     &none  &none  &none
  &none   &vs_def  &vs_impl  &vs_refs  &none       &none     &none     &none  &none  &none
  &trans  &mo 7    &mo 8     &none     &none       &none     &none     &none  &none  &trans
                   &mkp MB2  &mkp MB1  &mkp MB3    &mkp MB4  &mkp MB5  &none
            >;
        };

        SCROLL {
            display-name = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
                                &trans  &trans    &trans
            >;
        };
    };
};
